#!groovy

@Library("Infrastructure")

String product = "adoption"
String component = "ccd-definitions"

def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def secrets = [
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
}

withPipeline("nodejs", product, component) {

  loadVaultSecrets(secrets)

  after('test') {
    // enable yarn audit and send message on master branch only
    try {
      yarnBuilder.yarn('audit')
    } catch (error) {
      onMaster {
        slackSend(channel: '#adoption-tech', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }

  before('functionalTest:preview') {
    yarnBuilder.yarn('setup')

    stageWithAgent('Generate Adoption Case config', product) {
      yarnBuilder.yarn('generate-excel-all')
    }

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
    env.CCD_ADMIN_URL="https://admin-web-adoption-ccd-definitions-pr-${CHANGE_ID}.service.core-compute-preview.internal"
    env.XUI_WEB_URL="https://xui-adoption-ccd-definitions-pr-${CHANGE_ID}.service.core-compute-preview.internal"
    env.CCD_FILE_NAME="ccd-config-aat-${GIT_COMMIT}.xlsx"
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'

    yarnBuilder.yarn('test:fullfunctional')
  }

  before('functionalTest:aat') {
    yarnBuilder.yarn('setup')

    stageWithAgent('Generate Adoption Case config', product) {
      yarnBuilder.yarn('generate-excel-all')
    }

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/**/xlsx/*.xlsx'
    env.CCD_ADMIN_URL="https://ccd-admin-web.aat.platform.hmcts.net"
    env.XUI_WEB_URL="https://manage-case.aat.platform.hmcts.net"
    env.XUI_ORG_WEB_URL="https://manage-org.aat.platform.hmcts.net"
    env.CCD_FILE_NAME="ccd-config-aat-${GIT_COMMIT}.xlsx"
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'test/functional/output/mochawesome.html'
  }
}
